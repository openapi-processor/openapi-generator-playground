plugins {
    id 'groovy'
    id 'org.springframework.boot' version '2.7.12'
    //    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id "com.github.ben-manes.versions" version "0.46.0"

    id 'org.openapi.generator' version "6.6.0"
    id 'io.openapiprocessor.openapi-processor' version '2023.1'
}

apply plugin: 'org.openapi.generator'

group = 'io.openapiprocessor'
version = '1.0.0'

repositories {
    mavenCentral ()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.codehaus.groovy:groovy'

    // required by openapi-generator
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.10'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'

    testImplementation ('org.springframework.boot:spring-boot-starter-test') {
//        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform ()
}

sourceSets {
    main {
        java {
            srcDir 'build/openapi-generator'
            srcDir 'build/openapi-processor'
        }
    }
}

/*
 * sample api path => folder name
 */

def ACTIVE_API = "mapping-format-year"

/*
 * openapi-generator
 */

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$rootDir/src/api/$ACTIVE_API/openapi.yaml".toString()
    outputDir = "$buildDir/openapi-generator".toString()
    apiPackage = "io.openapiprocessor.oag.api"
    modelPackage = "io.openapiprocessor.oag.model"
    typeMappings.set([
        "integer+year": "Year"
    ])
    importMappings.set([
       "Year": "java.time.Year"
    ])
    configOptions.set([
        sourceFolder: "",
        interfaceOnly: "true",
        dateLibrary: "java8",
        useBeanValidation: "true",
//        annotationLibrary: "none"  / errors
//        hideGenerationTimestamp: "true",
//        skipDefaultInterface: "true"
    ])
}

compileJava.dependsOn tasks.openApiGenerate

/*
 * openapi-processor
 */

openapiProcessor {
    apiPath "${projectDir}/src/api/${ACTIVE_API}/openapi.yaml"

    spring {
        processor 'io.openapiprocessor:openapi-processor-spring:2023.2'
        targetDir "$buildDir/openapi-processor"
        mapping "${projectDir}/src/api/${ACTIVE_API}/mapping.yaml"
        parser 'INTERNAL'
    }
}

compileJava.dependsOn ('processSpring')
